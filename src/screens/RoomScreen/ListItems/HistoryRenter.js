import React from "react";import {	StyleSheet,	View,	TouchableOpacity,	Dimensions,	Image,} from "react-native";import { Icon, Text, Modal, Card } from "@ui-kitten/components";import moment from 'moment';import { color } from "~/config";const styles = StyleSheet.create({	wrapCard: {		flexDirection: "row",		backgroundColor: "#fff",		flexGrow: 1,		paddingVertical: 10,		paddingHorizontal: 15,		shadowColor: "rgba(0,0,0,.35)",		shadowOffset: {			width: 0,			height: 2,		},		shadowOpacity: 0.25,		shadowRadius: 3.84,		elevation: 5,	},	datetime: {		textAlign: "center",		paddingRight: 15,	},	date: {		fontSize: 28,		color: "#ccc",		fontWeight: "700",		textAlign: "center",	},	year: {		textAlign: "center",		fontWeight: "600",		color: "#ccc",	},	metaIcon: {		width: 20,		height: 20,		marginRight: 3,	},	info: {		justifyContent: "space-between",		flexGrow: 1,	},	metaWrap: {		flexDirection: "row",		marginTop: 5,	},	meta: {		flex: 1,		flexDirection: "row",		marginRight: 30,		alignItems: "center",	},	name: {		fontSize: 20,		color: color.primary,		fontWeight: "bold",	},	textNumber: {		letterSpacing: 1,		color: color.darkColor,		margin: 0,		fontSize: 16,	},	action: {		justifyContent: "center",		paddingLeft: 15,	},	backdrop: {		backgroundColor: "rgba(0, 0, 0, 0.5)",	},	modal: {		padding: 10,	},	buttonText: {		color: color.whiteColor,		fontSize: 56,		fontWeight: "bold",	},	buttonWrap: {		backgroundColor: "transparent",		flexDirection: "row",		position: "absolute",		top: 0,		left: 0,		flex: 1,		paddingHorizontal: 10,		paddingVertical: 10,		justifyContent: "space-between",		alignItems: "center",	},	imageBox: {		...StyleSheet.absoluteFill,		zIndex: -1,	},});const HistoryRecord = ({ renterInfo = false, data = {} }) => {	console.log(data);	const { FullName, Datein, Dateout } = data;	const formatDateOut = () => {		let rs = '';		rs = moment(Dateout, 'YYYY-MM-DDTHH:mm:ss').format('DD/MM/YYYY');		return rs === 'Invalid date' ? 'Đang thuê' : rs;	}	return (		<>			<View style={{}}>				<View style={styles.wrapCard}>					{!renterInfo && (						<View style={styles.datetime}>							<Text style={styles.date}>05</Text>							<Text style={styles.year}>2020</Text>						</View>					)}					<View style={styles.info}>						<Text style={styles.name}>{ FullName }</Text>						<View style={styles.metaWrap}>							{renterInfo ? (								<>									<View style={styles.meta}>										<Icon											name="log-in-outline"											fill={color.darkColor}											style={styles.metaIcon}										/>										<Text style={styles.textNumber}>{`${ moment(Datein, 'YYYY-MM-DDTHH:mm:ss').format('DD/MM/YYYY') }`}</Text>									</View>									<View style={styles.meta}>										<Icon											name="log-out-outline"											fill={color.redColor}											style={styles.metaIcon}										/>										<Text style={styles.textNumber}>{`${ formatDateOut() }`}</Text>									</View>								</>							) : (								<>									<View style={styles.meta}>										<Icon											name="droplet-outline"											fill={color.darkColor}											style={styles.metaIcon}										/>										<Text style={styles.textNumber}>8879909</Text>									</View>									<View style={styles.meta}>										<Icon											name="flash-outline"											fill={color.darkColor}											style={styles.metaIcon}										/>										<Text style={styles.textNumber}>3355542</Text>									</View>								</>							)}						</View>					</View>				</View>			</View>		</>	);};export default HistoryRecord;